// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: env_var_ref.sql

package sqlcgen

import (
	"context"
)

const envRefCreate = `-- name: EnvRefCreate :exec
INSERT INTO env_var_ref(
    env_id, name, comment, create_time, update_time, env_var_local_id
) VALUES (
    ?     , ?   , ?      , ?          , ?          , ?
)
`

type EnvRefCreateParams struct {
	EnvID         int64
	Name          string
	Comment       string
	CreateTime    string
	UpdateTime    string
	EnvVarLocalID int64
}

func (q *Queries) EnvRefCreate(ctx context.Context, arg EnvRefCreateParams) error {
	_, err := q.db.ExecContext(ctx, envRefCreate,
		arg.EnvID,
		arg.Name,
		arg.Comment,
		arg.CreateTime,
		arg.UpdateTime,
		arg.EnvVarLocalID,
	)
	return err
}

const envRefDelete = `-- name: EnvRefDelete :exec
DELETE FROM env_var_ref WHERE env_id = ? AND name = ?
`

type EnvRefDeleteParams struct {
	EnvID int64
	Name  string
}

func (q *Queries) EnvRefDelete(ctx context.Context, arg EnvRefDeleteParams) error {
	_, err := q.db.ExecContext(ctx, envRefDelete, arg.EnvID, arg.Name)
	return err
}
